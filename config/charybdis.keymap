#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>Add commentMore actions
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>



#define U_TAPPING_TERM 200

/ {
    trackball_listener {
        compatible = "zmk,input-listener";
        device = <&trackball>;
        input-processors = <&zip_xy_scaler 1 2>, <&zip_temp_layer 4 400>;

        // Switch to auto-mouse temp layer, decrease sensitivity

        scroll {
            layers = <5>; // SCROLL
            input-processors =
                <&zip_xy_scaler 1 5>,
                <&zip_xy_to_scroll_mapper>,
                <&zip_scroll_transform (INPUT_TRANSFORM_Y_INVERT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        minus {
            timeout-ms = <50>;
            key-positions = <37 40>; // KP: VB
            bindings = <&kp MINUS>;
            layers = <1 2 2 3 0 4>;
        };

        parentL {
            timeout-ms = <50>;
            key-positions = <9 8>;
            bindings = <&kp RPAR>;
            layers = <0 1 4 3 2>;
        };

        leftClick {
            bindings = <&mkp LCLK>;
            key-positions = <16 37>;
        };

        parentR {
            timeout-ms = <50>;
            key-positions = <7 8>; // KP: RT
            bindings = <&kp LEFT_PARENTHESIS>;
            layers = <1 2 2 3 0 4>;
        };

        lclick {
            bindings = <&mkp LCLK>;
            key-positions = <39 40>;
        };

        rclick {
            bindings = <&mkp RCLK>;
            key-positions = <16 36>;
        };

        middleClick {
            bindings = <&mkp MCLK>;
            key-positions = <38 16>;
        };
    };

    behaviors {
        u_mt: u_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_mt";
            #binding-cells = <2>;
            tapping_term_ms = <U_TAPPING_TERM>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        u_lt: u_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_lt";
            #binding-cells = <2>;
            tapping_term_ms = <U_TAPPING_TERM>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        Shift_Enter: Shift_Enter {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_ENTER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <40>;
            tapping-term-ms = <100>;
        };
    };

    macros {
        euro: euro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_0) &kp LA(NUMBER_1) &kp LA(NUMBER_2) &kp LA(N8)>;
            label = "EURO";
        };

        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp U &kp R &kp I &kp A &kp R &kp I &kp B &kp E &kp I &kp R &kp O &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEFAULT";
            bindings = <
&lt 3 ESC  &kp Q  &kp W    &kp E      &kp R        &kp T                  &kp Y            &kp U        &kp I        &kp O       &kp P          &kp BACKSPACE
&kp TAB    &kp A  &lt 3 S  &kp D      &kp F        &kp G                  &kp H            &kp J        &kp K        &lt 3 L     &kp SEMICOLON  &kp SQT
&kp LSHFT  &kp Z  &kp X    &kp C      &kp V        &kp B                  &kp N            &kp M        &lt 3 COMMA  &kp PERIOD  &kp SLASH      &kp RSHFT
                           &kp LCTRL  &lt 1 SPACE  &lt 2 RIGHT_COMMAND    &lt 2 BACKSPACE  &lt 1 ENTER
            >;
        };

        number_layer {
            label = "NUMBER";
            bindings = <
&trans  &kp AT           &kp N7  &kp N8  &kp N9  &kp EQUAL    &kp DOLLAR  &euro           &kp UP_ARROW    &trans           &trans   &trans
&trans  &kp EXCLAMATION  &kp N4  &kp N5  &kp N6  &kp PLUS     &kp HOME    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END  &trans
&trans  &kp N0           &kp N1  &kp N2  &kp N3  &kp DOT      &email      &trans          &trans          &trans           &trans   &trans
                                 &trans  &trans  &trans       &trans      &trans
            >;
        };

        fn_layer {
            label = "FN";
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &kp F10  &kp F11  &kp F12  &bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&sys_reset    &trans        &kp F7   &kp F8   &kp F9   &out OUT_USB    &out OUT_USB  &trans        &trans        &trans        &trans        &sys_reset
&trans        &trans        &kp F4   &kp F5   &kp F6   &out OUT_BLE    &out OUT_BLE  &trans        &trans        &trans        &trans        &trans
                                     &kp F1   &kp F2   &kp F3          &trans        &trans
            >;
        };

        mouse {
            label = "HOTKEY";
            bindings = <
&trans  &trans  &trans  &trans     &trans     &kp C_VOLUME_UP      &msc SCRL_UP    &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans     &kp C_VOLUME_DOWN    &msc SCRL_DOWN  &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans     &kp C_MUTE           &trans          &trans     &trans     &trans  &trans  &trans
                        &mkp RCLK  &mkp LCLK  &mkp MCLK            &mkp RCLK       &mkp LCLK
            >;
        };

        navigation {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans          &kp UP_ARROW    &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans          &trans          &trans           &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };
    };
};
